generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String      @id @default(cuid()) @map("_id")
  name          String      
  username      String
  password      String
  role          String? 
  adminLevel    Int         @default(0) // 0: regular user, 1: voting period admin, 2: supreme admin
  deleted       Boolean     @default(false)
  votedPeriods  UserVotedPeriod[]
  votingPeriod  VotingPeriod? @relation(fields: [votingPeriodId], references: [id])
  votingPeriodId String?

  @@unique([username, votingPeriodId])
}

model VotingPeriod {
  id        String       @id @default(cuid()) @map("_id")
  name      String
  startDate DateTime
  endDate   DateTime
  current   Boolean @default(false)
  deleted   Boolean @default(false)
  positions Position[]
  candidates Candidate[]
  votes      Vote[]
  userVoted UserVotedPeriod[]
  users      User[]
}

model Position {
  id            String @id @default(cuid()) @map("_id")
  name          String
  votingPeriod  VotingPeriod @relation(fields: [votingPeriodId], references: [id])
  votingPeriodId String
  deleted       Boolean @default(false)
  candidates    Candidate[]
  votes         Vote[]
}

model Candidate {
  id            String @id @default(cuid()) @map("_id")
  name          String
  image         String?
  position      Position    @relation(fields: [positionId], references: [id])
  positionId    String
  deleted       Boolean @default(false)
  votingPeriod  VotingPeriod @relation(fields: [votingPeriodId], references: [id])
  votingPeriodId String
  votes         Vote[]
}

model Vote {
  id            String @id @default(cuid()) @map("_id")
  candidate     Candidate   @relation(fields: [candidateId], references: [id])
  candidateId   String
  votingPeriod  VotingPeriod @relation(fields: [votingPeriodId], references: [id])
  votingPeriodId String
  position      Position    @relation(fields: [positionId], references: [id])
  positionId    String
  isYes         String?  
}

model UserVotedPeriod {
  id            String @id @default(cuid()) @map("_id")
  user          User @relation(fields: [userId], references: [id])
  userId        String
  votingPeriod  VotingPeriod @relation(fields: [votingPeriodId], references: [id])
  votingPeriodId String
}